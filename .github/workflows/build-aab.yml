name: Build AAB (Release)

on:
  # Tag-driven releases: vYYYY.MM.DD or vYYYY.MM.DD.N
  push:
    tags:
      - 'v*'
  # Manual trigger remains supported
  workflow_dispatch:
    inputs:
      versionCode:
        description: 'Override versionCode (optional)'
        required: false
      versionName:
        description: 'Override versionName (optional)'
        required: false

jobs:
  bundle-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Configure Gradle caching
        uses: gradle/actions/setup-gradle@v4

      - name: Calculate version (CalVer + CI run number)
        id: ver
        shell: bash
        env:
          INPUT_VERSION_CODE: ${{ inputs.versionCode }}
          INPUT_VERSION_NAME: ${{ inputs.versionName }}
        run: |
          set -euo pipefail
          # Prefer tag name if this is a tag build; else build CalVer from current date
          if [ "${GITHUB_REF_TYPE:-}" = "tag" ]; then
            TAG_NAME="${GITHUB_REF_NAME:-}"
          else
            TAG_NAME=""
          fi
          if [ -n "$TAG_NAME" ]; then
            # Strip leading 'v' if present
            VERSION_NAME="${TAG_NAME#v}"
          else
            VERSION_NAME="$(date -u +'%Y.%m.%d').${GITHUB_RUN_NUMBER}"
          fi
          # Version code must be monotonically increasing integer
          if [ -n "${INPUT_VERSION_CODE:-}" ]; then
            VERSION_CODE="${INPUT_VERSION_CODE}"
          else
            VERSION_CODE="${GITHUB_RUN_NUMBER}"
          fi
          if [ -n "${INPUT_VERSION_NAME:-}" ]; then
            VERSION_NAME="${INPUT_VERSION_NAME}"
          fi
          echo "VERSION_NAME=${VERSION_NAME}" | tee -a "$GITHUB_ENV"
          echo "VERSION_CODE=${VERSION_CODE}" | tee -a "$GITHUB_ENV"
          echo "name=${VERSION_NAME}" >> "$GITHUB_OUTPUT"
          echo "code=${VERSION_CODE}" >> "$GITHUB_OUTPUT"

      - name: Install npm deps
        run: npm ci || npm install

      - name: Prepare web assets (www/)
        shell: bash
        run: |
          rsync -a --delete \
            --exclude 'android' \
            --exclude 'node_modules' \
            --exclude '.git' \
            --exclude '.github' \
            --exclude 'old' \
            ./ ./www/
          # Generate app-version.json consumed by web and app (About screen)
          printf '{"version":"%s","build":%s,"commit":"%s","date":"%s"}\n' \
            "${VERSION_NAME}" "${VERSION_CODE}" "${GITHUB_SHA}" "$(date -u +'%Y-%m-%dT%H:%M:%SZ')" > www/app-version.json
          # Copy web assets into Android via Capacitor
          npx cap copy android
          npx cap update android

      - name: Inject signing keystore
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        shell: bash
        run: |
          mkdir -p android
          echo "Writing keystore.jks from secret..."
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > android/keystore.jks
          cat > android/keystore.properties <<'EOF'
          storeFile=keystore.jks
          storePassword=${{ secrets.ANDROID_KEYSTORE_STORE_PASSWORD }}
          keyAlias=${{ secrets.ANDROID_KEYSTORE_ALIAS }}
          keyPassword=${{ secrets.ANDROID_KEYSTORE_KEY_PASSWORD }}
          EOF
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Build AAB
        working-directory: android
        env:
          VERSION_NAME: ${{ env.VERSION_NAME }}
          VERSION_CODE: ${{ env.VERSION_CODE }}
        run: ./gradlew :app:bundleRelease --stacktrace --no-daemon

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab-${{ steps.ver.outputs.name }}
          path: android/app/build/outputs/bundle/release/app-release.aab
          if-no-files-found: error
